{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","buildQuery","SiriDBDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","scope","target","aggr","group","raw","diff","datasource","metricFindQuery","then","transformToSegments","panelCtrl","refresh","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,e,kBAAAA,S;;AAEAC,gB,YAAAA,U;;;;;;;;;;;;;;;;;;;;;2CAEKC,yB;;;AAEX,2CAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,YAA/B,EAA8C;AAAA;;AAAA,4JACtCF,MADsC,EAC9BC,SAD8B;;AAG5C,gBAAKE,KAAL,GAAaH,MAAb;AACA,gBAAKE,YAAL,GAAoBA,YAApB;AACA,gBAAKE,MAAL,CAAYA,MAAZ,GAAqB,MAAKA,MAAL,CAAYA,MAAZ,IAAsB,EAA3C;AACA,gBAAKA,MAAL,CAAYC,IAAZ,GAAmB,MAAKD,MAAL,CAAYC,IAAZ,IAAoB,MAAvC;AACA,gBAAKD,MAAL,CAAYE,KAAZ,GAAoB,MAAKF,MAAL,CAAYE,KAAZ,IAAqB,EAAzC;AACA,gBAAKF,MAAL,CAAYG,GAAZ,GAAkB,MAAKH,MAAL,CAAYG,GAAZ,IAAmB,IAArC;AACA,gBAAKH,MAAL,CAAYI,IAAZ,GAAmB,MAAKJ,MAAL,CAAYI,IAAZ,IAAoB,KAAvC;AAT4C;AAU7C;;;;uCAEY;AACX,mBAAO,KAAKC,UAAL,CAAgBC,eAAhB,CAAgC,KAAKN,MAArC,EACJO,IADI,CACC,KAAKT,YAAL,CAAkBU,mBAAlB,CAAsC,KAAtC,CADD,CAAP;AAEE;AACH;;;6CAEkB;AACjB,iBAAKR,MAAL,CAAYG,GAAZ,GAAmB,KAAKH,MAAL,CAAYG,GAAZ,KAAoB,IAArB,GAA6BT,WAAW,KAAKM,MAAhB,CAA7B,GAAuD,IAAzE;AACD;;;6CAEkB;AACjB,iBAAKS,SAAL,CAAeC,OAAf,GADiB,CACS;AAC3B;;;;QA1B4CjB,S;;;;AA6B/CE,gCAA0BgB,WAA1B,GAAwC,4BAAxC","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\nimport {buildQuery} from \"./tools.js\";\n\nexport class SiriDBDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.target.target = this.target.target || '';\n    this.target.aggr = this.target.aggr || 'mean';\n    this.target.group = this.target.group || '';\n    this.target.raw = this.target.raw || null;\n    this.target.diff = this.target.diff || false;\n  }\n\n  getOptions() {\n    return this.datasource.metricFindQuery(this.target)\n      .then(this.uiSegmentSrv.transformToSegments(false));\n      // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n  }\n\n  toggleEditorMode() {\n    this.target.raw = (this.target.raw === null) ? buildQuery(this.target) : null;\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n}\n\nSiriDBDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}